# Workflow name
name: EE deploy

# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      EE_FOLDER_NAME:
        description: 'name of the folder where the EE is located (will become the name of the EE)'
        required: true
        type: string
      EE_IMAGE_NAME:
        description: Name of the image
        required: true
        type: string
      EE_IMAGE_TAG:
        description: Tag for the image
        required: true
        type: string
      EE_ANSIBLE_VERSION:
        description: 'Version of ansible to install'
        required: true
        type: string
      EE_REGISTRY:
        description: Registry to push the images
        required: true
        type: string
      EE_REGISTRY_USERNAME:
        description: Username for the registry
        required: true
        type: string
    secrets:
      EE_REGISTRY_PASSWORD:
        description: Password for the registry
        required: false

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  # v -> does not work
  #EE_IMAGE_NAME: ${{ contains(fromJSON('["main", "master"]'), env.BRANCH_NAME) && inputs.EE_IMAGE_NAME || inputs.EE_IMAGE_NAME + '-' env.BRANCH_NAME }}


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set EE_IMAGE_NAME
        run: |
          set -euo pipefail
          if [ "${BRANCH_NAME}" == "main" ] || [ "${BRANCH_NAME}" == "master" ]; then
            echo "EE_IMAGE_NAME=${{inputs.EE_IMAGE_NAME}}" >> $GITHUB_ENV
          else
            echo "EE_IMAGE_NAME=${{inputs.EE_IMAGE_NAME}}-${BRANCH_NAME}" >> $GITHUB_ENV
          fi

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          sudo apt-get install podman
          pip install ansible-core ansible-builder ansible-navigator

      - name: Log in to image registry
        uses: redhat-actions/podman-login@v1
        with:
          registry: ${{ inputs.EE_REGISTRY }}
          username: ${{ inputs.EE_REGISTRY_USERNAME }}
          password: ${{ secrets.EE_REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: Build ${{ env.EE_IMAGE_NAME }}:${{ inputs.EE_IMAGE_TAG }} image
        id: image-build
        run: |
          ansible-builder build \
            -v 3 \
            --build-arg ANSIBLE_INSTALL_REFS="ansible==${{inputs.EE_ANSIBLE_VERSION}} ansible-runner" \
            -t ${{ env.EE_IMAGE_NAME }}:${{ inputs.EE_IMAGE_TAG }} \
            --tag=${{ env.EE_IMAGE_NAME }}:${{ inputs.EE_ANSIBLE_VERSION }}
            #--tag=${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_ANSIBLE_VERSION }} \
        working-directory: ./${{ inputs.EE_FOLDER_NAME }}

      - name: Run basic tests with ${{ env.EE_IMAGE_NAME }}:${{ inputs.EE_IMAGE_TAG }} image
        run: |
          ansible-navigator --mode stdout --pull-policy never \
            --execution-environment-image ${{ env.EE_IMAGE_NAME }}:${{ inputs.EE_IMAGE_TAG }} \
            run tests.yml
        working-directory: ./${{ inputs.EE_FOLDER_NAME }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.4.0
        with:
          images: |
            ${{ env.EE_IMAGE_NAME }} #:${{ inputs.EE_IMAGE_TAG }}
          tags: |
            #type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=raw,enable=true,priority=200,prefix=,suffix=,value=${{ inputs.EE_IMAGE_TAG }}
          labels: |
            org.opencontainers.image.title=ee-${{ inputs.EE_ANSIBLE_VERSION }}
            org.opencontainers.image.description=Execution environment

      # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
      # in which case 'username' and 'password' can be omitted.
      - name: Push to registry
        id: push-to-registry
        uses: redhat-actions/push-to-registry@v2
        with:
          #image: ${{ env.EE_IMAGE_NAME }}:${{ inputs.EE_IMAGE_TAG }}
          image: ${{ env.EE_IMAGE_NAME }}
          tags: ${{ steps.meta.outputs.tags }}
          registry: ${{ inputs.EE_REGISTRY }}/${{ EE_REGISTRY_USERNAME }}
          username: ${{ inputs.EE_REGISTRY_USERNAME }}
          password: ${{ secrets.EE_REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}
        if: ${{ github.event_name != 'pull_request' }} # Don't push on PR
